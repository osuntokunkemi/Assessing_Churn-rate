# Import required modules
import pandas as pd
import numpy as np
from statsmodels.formula.api import logit


cars = pd.read_csv("car_insurance.csv")
cars.info()
cars["credit_score"].fillna(cars["credit_score"].mean(), inplace=True)  
cars["annual_mileage"].fillna(cars["annual_mileage"].mean(), inplace=True)  
models = []
features = cars.drop(columns=["id", "outcome"]).columns

for col in features:
    model = logit(f"outcome ~ {col}", data=cars).fit()
    models.append(model)
accuracies = []
for feature in range(0, len(models)):
    conf_matrix = models[feature].pred_table() 
    tn = conf_matrix[0,0]    
    tp = conf_matrix[1,1]
    fn = conf_matrix[1,0]
    fp = conf_matrix[0,1]  # Added this line to define 'fp'
    acc = (tn + tp) / (tn + fn + fp + tp) 
    accuracies.append(acc)
best_feature = features[accuracies.index(max(accuracies))]                 
best_feature_df = pd.DataFrame({"best_feature": best_feature,
                                "best_accuracy": max(accuracies)}, index=[0])  # Corrected index syntax
best_feature_df
